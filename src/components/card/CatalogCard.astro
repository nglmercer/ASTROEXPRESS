---
const { data } = Astro.props;

let parsedData = null;

if (data && typeof data === 'object') {
  const isCatalogoFormat = 'nombreCatalogo' in data;

  if (isCatalogoFormat) {
    // Formato "Catalogo"
    const {
      nombreCatalogo = "Sin título",
      descripcionCatalogo = "Sin descripción",
      imagenPortadaCatalogo = "https://via.placeholder.com/200x300?text=Sin+imagen",
      categorias = [],
    } = data;

    parsedData = {
      titulo: nombreCatalogo,
      descripcion: descripcionCatalogo,
      categorias,
      imagen: imagenPortadaCatalogo,
    };
  } else {
    // Formato genérico
    const {
      titulo = "Sin título",
      descripcion = "Sin descripción",
      categorias = [],
      imagen = "https://via.placeholder.com/200x300?text=Sin+imagen",
    } = data;

    parsedData = { titulo, descripcion, categorias, imagen };
  }
}
---

{parsedData && (
  <div class="card">
    <div class="info">
      <h2>Catálogo: {parsedData.titulo}</h2>
      <p>Descripción: {parsedData.descripcion}</p>
      <p class="categorias">
        Categorías: {parsedData.categorias.length ? parsedData.categorias.join(", ") : "N/A"}
      </p>
    </div>
    <img class="poster" src={parsedData.imagen} alt={`Póster de ${parsedData.titulo}`} />
  </div>
)}

<style>
  .card {
    display: flex;
    justify-content: space-between;
    align-items: stretch;
    background: linear-gradient(to bottom, #2e005d, #3d006b);
    color: white;
    border-radius: 1rem;
    overflow: hidden;
    font-family: sans-serif;
  }

  .info {
    padding: 1.5rem;
    flex: 1;
  }

  .info h2 {
    margin: 0 0 0.5rem;
    font-size: 1.3rem;
  }

  .info p {
    margin: 0.5rem 0;
  }

  .categorias {
    color: #ccc;
    font-size: 0.95rem;
  }

  .poster {
    width: 200px;
    object-fit: cover;
  }

  @media (max-width: 600px) {
    .card {
      flex-direction: column;
    }

    .poster {
      width: 100%;
      height: auto;
    }
  }
</style>

