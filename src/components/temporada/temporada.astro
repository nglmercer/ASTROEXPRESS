---
import { fetchapi } from '@utils/fetchserver.js';
import {ObjectTableSolid,SignalBridge}from '@components/solid/ObjectTableSolid.jsx';
const { params } = Astro;
const idCatalogo = params.idCatalogo;
const idTemporada = params.idTemporada;

const post = await fetchapi.getCapitulos(idCatalogo, idTemporada);

let Item;
if (!post || post.length === 0) {
  return  Astro.redirect("/404")
} else {
  Item = Array.isArray(post) ? post : [post];
}

const keys = [
  "catalogoCapitulo",
  "idCapitulo",
  "imagenCapitulo",
  "temporadaCapitulo"
]
const actions = [
  { name: 'edit', icon: 'edit', label: 'Edit' },
  { name: 'delete', icon: 'delete', label: 'Delete' },
  { name: 'view', icon: 'view', label: 'View' },
]; 
---
<script src="/src/components/tablejs/modal.js"></script>
<script src="/src/components/tablejs/table.js"></script>
<div class="MainInformation" data-page-num={idTemporada}>


  <h1>Catálogo: {idCatalogo}</h1>
  <h2>Temporada: {idTemporada}</h2>
</div>
<div class="container">
  <div class="button-group">
    <button data-form-type="temporada" class="primary">Temporada</button>
    <button data-form-type="user" class="primary">Usuario</button>
    <button data-form-type="catalogo" class="primary">Catalogo</button>
</div>

<dlg-cont id="modal-container">
    <dyn-obj-disp id="dynamic-editor" mode="edit" darkmode>
    </dyn-obj-disp>
</dlg-cont>

<ObjectTableSolid
 data={Item} keys={keys} actions={actions} darkMode={true} 
 id="catalogo"
  client:only  />
<SignalBridge client:only />
<object-table-lit id="catalogo" darkmode></object-table-lit>

<script>
  import { fetchapi } from '@utils/fetchserver.js';
  document.addEventListener('DOMContentLoaded', async () => {
/*     const element = document.querySelector('[data-page-num]');
    const pageNum = Number(element?.dataset.pageNum) || 1;
    console.log("Page Number:", pageNum);
 */

  });
  window.addEventListener('action-signal', (e) => {
    const { name, item, index } = e.detail;
    console.log(`Acción ${name} en fila ${index}`, item);


  });

  window.addEventListener('row-activated', (e) => {
    const { item, index } = e.detail;
    console.log('Double-click en', item);
    // lógica similar
  });

  window.addEventListener('row-contextmenu', (e) => {
    const { item, index, type } = e.detail;
    console.log('Click derecho en', item);
    // puedes mostrar un menú contextual aquí
  });

</script>
</div>

<style>
    button { padding: 0.6em 1.2em; cursor: pointer; margin: 5px; border-radius: 4px; border: 1px solid #555; background-color: #333; color: white; }
        button.primary { background-color: #007bff; border-color: #007bff; }
        button:hover { filter: brightness(1.2); }
        #modal-container dyn-obj-disp { /* Estilo más general */
            min-width: 400px;
            display: block; /* Asegurar que toma espacio */
            background-color: #222; /* Fondo para el contenido del modal */
            border-radius: 8px;
             /* obj-edit-form dentro no necesita borde/padding extra */
        }
         #modal-container dyn-obj-disp obj-edit-frm {
             border: none;
             padding: 0;
             background: transparent;
         }
        .output { margin-top: 1rem; padding: 1rem; background-color: #1a1a1a; border: 1px solid #333; border-radius: 5px; white-space: pre-wrap; font-family: monospace; min-height: 50px;}
        .loading { font-style: italic; color: #aaa; }
</style>